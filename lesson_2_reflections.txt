What happens when you initialize a repository? Why do you need to do it?

Because this way i have created a repository in my directory and now i can create commits and see version history of my files contained within the directory.

How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area is a medium and temporary area as it temporarily stores all the files to be commited in a single commit command. It holds files from the working directory to be commited to the repository.

How can you use the staging area to make sure you have one commit per logical change?

Check differences between modified files and staged area using git diff _>Add files to staging area using git add -> run git diff --staged to see differences between staging area and latest commit -> make sure what changes i want to commit -> discard everything that i don't wanna change.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Branches would help if i would want to try something new on code or make a different edition of the code like easy mode. This would help in a way that i could switch up between 2 versions while them being both functional. Also, i could tryout new things without the risk of ruining the main branch.

How do the diagrams help you visualize the branch structure?

It helps vizualize the history of how each branch forms and continues separately from the others.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

The result is a new master branch which contains all the changes made in master branch after branch point and all of the changes introduced in the coins branch. We represent it that way because coins branch is merged into master branch and the master branch continues onward like this.